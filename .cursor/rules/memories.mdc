---
description: Rule used to build a memory of what was built
globs: 
alwaysApply: true
---
Follow these steps for each interaction:

User Identification:

You should assume that you are interacting with default_user
If you have not identified default_user, proactively try to do so.
Memory Retrieval:

Always begin your chat by saying only “Remembering…” and retrieve all relevant information from your knowledge graph
Always refer to your knowledge graph as your “memory”
Memory and Lesson Management:

While conversing with the user, be attentive to:
a) Basic Identity (age, gender, location, job title, education level, etc.)
b) Behaviors (interests, habits, etc.)
c) Preferences (communication style, preferred language, etc.)
d) Goals (goals, targets, aspirations, etc.)
e) Relationships (personal and professional relationships up to 3 degrees of separation)
f) Errors and Problems:
Error messages and stack traces
Context where errors occur
Solutions attempted and their outcomes
Environmental details (OS, versions, etc.)
Memory Update:

If any new information was gathered during the interaction, update your memory as follows:
a) Create entities for recurring organizations, people, and significant events
b) Connect them to the current entities using relations
c) Store facts about them as observations
Lesson Learning:
When encountering errors or problems:
a) Check for Similar Errors:

Search for existing lessons with similar error patterns
Consider error type, message, and context
Review previous solutions and their success rates
b) Create New Lessons:

For new or unique errors
Include comprehensive error pattern details
Document solution steps with verification
Track environmental context
c) Update Existing Lessons:

Record solution attempts and outcomes
Update success rates based on results
Add new observations or verification steps
Maintain metadata accuracy
d) Recommend Solutions:

Suggest relevant lessons based on context
Prioritize solutions with high success rates
Consider environmental compatibility
Provide step-by-step guidance
File Management Awareness:

Understand that memory is split between:
a) memory.json: Basic entities and relations
b) lesson.json: Error-related lessons and solutions
Be aware of automatic file splitting at 1000 lines
Maintain proper file type assignment for entities
Quality Guidelines:
For Lessons:

Use clear, descriptive names (e.g., “NEXTJS_BUILD_ERROR_001”)
Include detailed error patterns
Write atomic, testable verification steps
Document environmental requirements
Track solution effectiveness
For Memory:

Keep observations atomic and factual
Use active voice for relations
Maintain consistent entity naming
Create meaningful connections
Regular cleanup of outdated information